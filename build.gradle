buildscript {
    ext.kotlinVersion = "1.5.10"
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = "3.0.0"
group = "kwork"
archivesBaseName = "KWork"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
idea.module.inheritOutputDirs = true

compileKotlin {
    kotlinOptions.useIR = true
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenCentral()
    maven {
        name = "Spongepowered"
        url = "https://repo.spongepowered.org/maven"
    }
}

minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                kwork {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'kwork', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                kwork {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "mixins.kwork.refmap.json"
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.31'

    annotationProcessor('org.spongepowered:mixin:0.8.3-SNAPSHOT:processor')

    shade "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    shade "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    shade 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.5.0'
}

jar {
    destinationDir = file("compiled")

    manifest {
        attributes([
                "Specification-Title": "kwork",
                "Specification-Vendor": "kwork",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" : "kwork",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'MixinConfigs': 'mixins.kwork.json'
        ])
    }
    
    exclude '**/*.kotlin_metadata'
    exclude '**/*.kotlin_module'
    exclude '**/*.kotlin_builtins'

    from configurations.shade.collect { it.isDirectory() ? it : zipTree(it)}
}

jar.finalizedBy('reobfJar')
